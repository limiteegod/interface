#include <stdlib.h>
#include <stdio.h>
#include "String.h"
#include "StringUtil.h"

using namespace vs;

String::String()
{
}

String::String(int volume, const char *src)
{
    this->volume = volume;
    //分配volume大小的容量
    this->p = (char *)malloc(sizeof(char)*volume);
    this->length = 0;
    this->append(src);
}

void String::show()
{
    printf("%s\n", this->p);
}

/**
 * 获得字符串的长度
 */
int String::getLength()
{
    return this->length;
}

/**
 * 获得字符串的空间容量
 */
int String::getVolume()
{
    return this->volume;
}

void String::append(const char *src)
{
    int strLen = StringUtil::Length(src);
    //容量不够，需要扩充容量
    if(strLen + this->length > this->volume + 1)
    {
        //扩展的容量方式为，自身容量+自身容量*1/3+strLen
        int newVolume = this->volume + this->volume/3 + strLen;
        char* newP = (char *)realloc(this->p, newVolume);
        if(newP != NULL)
        {
            this->p = newP;
            this->volume = newVolume;
        }
    }
    char *pTmp = this->p + this->length;
    while(*src != '\0')
    {
        *pTmp = *src;
        src++;
        pTmp++;
        this->length++;
    }
    *pTmp = '\0';
}

void String::append(String *src)
{
    char *pSrc = src->pointer(0);
    this->append(pSrc);
}

char* String::pointer(int offset)
{
    return this->p + offset;
}

String::~String()
{
    free(this->p);
}
